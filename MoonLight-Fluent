


--Discord
--// Webhook URL
local webhookUrl = "https://discord.com/api/webhooks/1342240338026168330/PhI14Mml8laXAH_3QKAitD7lQ_kuMlKeihfiSVgZlwY85g_0GyESB3_nQH67TYTl3wPA"




--// Get Player Info
local player = game:GetService("Players").LocalPlayer
local leaderstats = player:FindFirstChild("leaderstats")

--// Get Stats
local username = player.Name
local strength = leaderstats and leaderstats:FindFirstChild("Strength") and leaderstats.Strength.Value or "N/A"
local durability = player:FindFirstChild("Durability") and player.Durability.Value or "N/A"
local agility = player:FindFirstChild("Agility") and player.Agility.Value or "N/A"
local rebirths = leaderstats and leaderstats:FindFirstChild("Rebirths") and leaderstats.Rebirths.Value or "N/A"
local gems = player:FindFirstChild("Gems") and player.Gems.Value or "N/A"

--// Create Embed Data
local data = {
    ["embeds"] = {{
        ["title"] = "Player Stats",
        ["color"] = tonumber(0x00ff00), -- Green color
        ["fields"] = {
            {["name"] = "Username", ["value"] = username, ["inline"] = true},
            {["name"] = "Strength", ["value"] = tostring(strength), ["inline"] = true},
            {["name"] = "Durability", ["value"] = tostring(durability), ["inline"] = true},
            {["name"] = "Agility", ["value"] = tostring(agility), ["inline"] = true},
            {["name"] = "Rebirths", ["value"] = tostring(rebirths), ["inline"] = true},
            {["name"] = "Gems", ["value"] = tostring(gems), ["inline"] = true}
        }
    }}
}

--// Convert to JSON
local body = game:GetService("HttpService"):JSONEncode(data)
local headers = {["Content-Type"] = "application/json"}

--// Send Request (Supports Different Exploits)
if request then
    request({Url = webhookUrl, Method = "POST", Headers = headers, Body = body})
elseif http_request then
    http_request({Url = webhookUrl, Method = "POST", Headers = headers, Body = body})
elseif syn and syn.request then
    syn.request({Url = webhookUrl, Method = "POST", Headers = headers, Body = body})
end



  local Library = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
  local Window = Fluent:CreateWindow({
    Title = "MoonLight [Fluent]" .. Fluent.Version,
    SubTitle = "by MoonlightÃ—Godlike",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true, -- The blur may be detectable, setting this to false disables blur entirely
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl -- Used when theres no MinimizeKeybind
})
  -- Fluent provides Lucide Icons, they are optional
local Tabs = {
    Main = Window:AddTab({ Title = "Main", Icon = "badge-check" }),
    Settings = Window:AddTab({ Title = "Settings", Icon = "settings" })
}
Tab:AddButton({
    Title = "Main",
    Description = "List of misc functions",
    Callback = function()
        print("GODLIKE")
    end
})
local isAntiLagEnabled = false
local function setAntiLag(value)
    isAntiLagEnabled = value
    if isAntiLagEnabled then
        notify("Anti-Lag Enabled", "The script will now have reduced lag.", 3)
    else
        notify("Anti-Lag Disabled", "The script will return to normal performance.", 3)
    end
end
    
